name: Media Radar Backend CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on main branch commits
      - master  # Also support master branch
  pull_request:
    branches:
      - main
      - master

env:
  # Local Helm chart configuration (k8s folder in same repo)
  HELM_CHART_PATH: "./k8s/values.yaml"  # Path to backend values.yaml
  HELM_CHART_YAML: "./k8s/Chart.yaml"  # Path to backend Chart.yaml
  
  # Docker Image Configuration
  IMAGE_REGISTRY: "registry.cgraaaj.in/media-radar"
  IMAGE_NAME: "media-radar-svc"
  IMAGE_TAG: ${{ github.sha }}

jobs:
  # test:
  #   name: Run Tests
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - name: Checkout Code
  #     uses: actions/checkout@v4
      
  #   - name: Set up Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: '18'
  #       cache: 'npm'
  #       cache-dependency-path: backend/package-lock.json
        
  #   - name: Install Dependencies
  #     working-directory: ./backend
  #     run: npm ci
      
  #   - name: Run Tests
  #     working-directory: ./backend
  #     run: |
  #       # Add your test commands here
  #       # npm test
  #       npm run lint || true  # Run linting if available
        
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    # needs: test  # Commented out since test job is disabled
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    ### ✅ Checkout App Repository
    - name: Checkout App Repo
      uses: actions/checkout@v4

    ### ✅ Set up Docker Buildx for Multi-Arch Builds
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    ### ✅ Login to Harbor Registry
    - name: Docker Login to Harbor
      run: |
        echo "${{ secrets.HARBOR_PASSWORD }}" | docker login ${{ env.IMAGE_REGISTRY }} -u ${{ secrets.HARBOR_USERNAME }} --password-stdin

    ### ✅ Build and Push Multi-Arch Image
    - name: Build and Push Image
      run: |
        # Use short SHA for image tag
        SHORT_SHA=$(echo $GITHUB_SHA | head -c7)
        docker buildx build \
          --platform linux/amd64,linux/arm64 \
          --push \
          -t ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${SHORT_SHA} \
          -t ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
          .

    ### ✅ Update Local Helm Values (Image Repository and Tag)
    - name: Update Helm Values
      run: |
        SHORT_SHA=$(echo $GITHUB_SHA | head -c7)
        # Update image repository in values.yaml
        sed -i "s|repository: .*|repository: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}|" ${{ env.HELM_CHART_PATH }}
        # Update image tag in values.yaml
        sed -i "s|tag: .*|tag: \"${SHORT_SHA}\"|" ${{ env.HELM_CHART_PATH }}

    ### ✅ Bump Local Helm Chart Version
    - name: Bump Helm Chart Version
      run: |
        # Extract current version and increment patch version
        CURRENT_VERSION=$(grep "version:" ${{ env.HELM_CHART_YAML }} | awk '{print $2}' | tr -d '"')
        NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. -v OFS=. '{$NF += 1 ; print}')
        sed -i "s/version: .*/version: \"$NEW_VERSION\"/" ${{ env.HELM_CHART_YAML }}
        echo "Updated chart version from $CURRENT_VERSION to $NEW_VERSION"

    ### ✅ Commit and Push Local Helm Changes
    - name: Commit and Push Helm Changes
      run: |
        git config --global user.email "bot@cgraaaj.in"
        git config --global user.name "GitHub Actions Bot"
        
        SHORT_SHA=$(echo $GITHUB_SHA | head -c7)
        git add ${{ env.HELM_CHART_PATH }} ${{ env.HELM_CHART_YAML }}
        git commit -m "Update ${{ env.IMAGE_NAME }} image to ${SHORT_SHA} and bump chart version" || exit 0
        git push origin HEAD
