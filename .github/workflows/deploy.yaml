name: Media Radar Backend CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on main branch commits
      - master  # Also support master branch
  pull_request:
    branches:
      - main
      - master

env:
  HELM_REPO: "git@github.com:cgraaaj/media-radar-k8s.git"  # Update this to your actual Helm repo
  HELM_BRANCH: "main"
  HELM_CHART_PATH: "backend/values.yaml"
  HELM_CHART_YAML: "backend/Chart.yaml"
  IMAGE_REGISTRY: "registry.cgraaaj.in"
  IMAGE_NAME: "media-radar-backend"
  IMAGE_TAG: ${{ github.sha }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: Install Dependencies
      working-directory: ./backend
      run: npm ci
      
    - name: Run Tests
      working-directory: ./backend
      run: |
        # Add your test commands here
        # npm test
        npm run lint || true  # Run linting if available
        
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    ### ✅ Checkout App Repository
    - name: Checkout App Repo
      uses: actions/checkout@v4

    ### ✅ Set up Docker Buildx for Multi-Arch Builds
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    ### ✅ Login to Harbor Registry
    - name: Docker Login to Harbor
      run: |
        echo "${{ secrets.HARBOR_PASSWORD }}" | docker login ${{ env.IMAGE_REGISTRY }} -u ${{ secrets.HARBOR_USERNAME }} --password-stdin

    ### ✅ Build and Push Multi-Arch Image
    - name: Build and Push Image
      working-directory: ./backend
      run: |
        # Use short SHA for image tag
        SHORT_SHA=$(echo $GITHUB_SHA | head -c7)
        docker buildx build \
          --platform linux/amd64,linux/arm64 \
          --push \
          -t ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${SHORT_SHA} \
          -t ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
          .

    ### ✅ Clone Helm Repository (Optional - only if using Helm)
    - name: Clone Helm Repo
      if: env.HELM_REPO != ''
      env:
        SSH_PRIVATE_KEY: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
      run: |
        eval "$(ssh-agent -s)"
        echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null

        mkdir helm-repo
        cd helm-repo
        git clone ${{ env.HELM_REPO }} .
        git checkout ${{ env.HELM_BRANCH }}

    ### ✅ Bump Helm Image Tag in `values.yaml`
    - name: Update Helm Values
      if: env.HELM_REPO != ''
      run: |
        cd helm-repo
        SHORT_SHA=$(echo $GITHUB_SHA | head -c7)
        sed -i "s|tag: .*|tag: \"${SHORT_SHA}\"|" ${{ env.HELM_CHART_PATH }}

    ### ✅ Bump Helm Chart Version in `Chart.yaml`
    - name: Bump Helm Chart Version
      if: env.HELM_REPO != ''
      run: |
        cd helm-repo
        CHART_VERSION=$(grep "version:" ${{ env.HELM_CHART_YAML }} | awk '{print $2}')
        NEW_VERSION=$(echo $CHART_VERSION | awk -F. -v OFS=. '{$NF += 1 ; print}')
        sed -i "s/version: .*/version: $NEW_VERSION/" ${{ env.HELM_CHART_YAML }}

    ### ✅ Commit and Push Changes
    - name: Commit and Push Changes
      if: env.HELM_REPO != ''
      env:
        SSH_PRIVATE_KEY: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
      run: |
        eval "$(ssh-agent -s)"
        echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null

        cd helm-repo
        git config --global user.email "bot@cgraaaj.in"
        git config --global user.name "GitHub Actions Bot"
        
        git add ${{ env.HELM_CHART_PATH }} ${{ env.HELM_CHART_YAML }}
        git commit -m "Update media-radar-backend image tag and chart version" || exit 0
        git push origin ${{ env.HELM_BRANCH }}
